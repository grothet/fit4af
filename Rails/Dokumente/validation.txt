Mit validations können Eingeben des Benutzers im Formular geprüft werden.
Referenz: http://guides.rubyonrails.org/active_record_validations.html#numericality

Abfragen werden im Model realisiert: 
	validates :name, presence: true 	//Feld muss ausgefüllt sein
	validates :description, length: { minimum: 25 }	//Zeichenläge min. 25 Zeichen
	validates :price, numericality: { only_integer: true } //Nur Nummerneingaben möglich


Errorabfrage im _form:
	<% if @event.errors.any? %>
		<h3>Opps! Der <%= @event.class.name.titleize.downcase %> konnte nicht gespeichert werden </h3>
		Korrigieren Sie die folgenden <%= pluralize(@event.errors.count, "Error") %>
		<ul>
			<% @event.errors.full_messages.each do |message| %>
			<li><%= message %></li>
			<%end%>
		</ul>
	<%end%>
-----------------------------------------------------------------------------------

Die Kontrolle von Benutzereingaben finden im Model statt.
Beispiele:
	Feld muss ausgefüllt sein:
		validates :title, duration, presence: true
	Länge von:
		validates :description, length: {minimum: 25}
	Überprüfung ob Zahl:
		validates :total_gross, numericality: {greater_than_or_equal: 0, only_integer: true}
	Überprüfung auf Dateiendung:
		validates :poster_image_file, allow_blank: true, format: {with: /\w+.(gif|jpg|png)\z/i, message: "soll ein GIF, JPG oder PNG Bild sein"}
	Überprüfung auf bestimmten Inhalt:
		RATINGS = %w(G PG PG-13 R NC-17)
		validates :rating, inclusion: {in: RATINGS}

Weitere Anpassung:
Im Controller findet in den Actions: update und create eine Überprüfung statt ob es Fehler gibt. Falls ja wird das Formular neu geladen.

Im View muss eine Ausgabe der Fehlermeldung stattfinden.
